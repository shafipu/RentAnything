//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RentAdminPannel
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class rentdbEntities : DbContext
    {
        public rentdbEntities()
            : base("name=rentdbEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tbl_category> tbl_category { get; set; }
        public virtual DbSet<tbl_product> tbl_product { get; set; }
        public virtual DbSet<tbl_productstatus> tbl_productstatus { get; set; }
        public virtual DbSet<tbl_questionmaster> tbl_questionmaster { get; set; }
        public virtual DbSet<tbl_rollmaster> tbl_rollmaster { get; set; }
        public virtual DbSet<tbl_subcategory> tbl_subcategory { get; set; }
        public virtual DbSet<tbl_usermaster> tbl_usermaster { get; set; }
    
        public virtual int pDeleteCategory(Nullable<long> categoryid)
        {
            var categoryidParameter = categoryid.HasValue ?
                new ObjectParameter("categoryid", categoryid) :
                new ObjectParameter("categoryid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pDeleteCategory", categoryidParameter);
        }
    
        public virtual int pDeleteProduct(Nullable<long> productid)
        {
            var productidParameter = productid.HasValue ?
                new ObjectParameter("productid", productid) :
                new ObjectParameter("productid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pDeleteProduct", productidParameter);
        }
    
        public virtual int pDeleteproductstatus(Nullable<long> poductstatusid)
        {
            var poductstatusidParameter = poductstatusid.HasValue ?
                new ObjectParameter("poductstatusid", poductstatusid) :
                new ObjectParameter("poductstatusid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pDeleteproductstatus", poductstatusidParameter);
        }
    
        public virtual int pDeleteQuestion(Nullable<long> questionid)
        {
            var questionidParameter = questionid.HasValue ?
                new ObjectParameter("questionid", questionid) :
                new ObjectParameter("questionid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pDeleteQuestion", questionidParameter);
        }
    
        public virtual int pDeleteRollmaster(Nullable<long> rollid)
        {
            var rollidParameter = rollid.HasValue ?
                new ObjectParameter("rollid", rollid) :
                new ObjectParameter("rollid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pDeleteRollmaster", rollidParameter);
        }
    
        public virtual int pDeleteSubcategory(Nullable<long> subcategoryid, string subcategoryname)
        {
            var subcategoryidParameter = subcategoryid.HasValue ?
                new ObjectParameter("subcategoryid", subcategoryid) :
                new ObjectParameter("subcategoryid", typeof(long));
    
            var subcategorynameParameter = subcategoryname != null ?
                new ObjectParameter("subcategoryname", subcategoryname) :
                new ObjectParameter("subcategoryname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pDeleteSubcategory", subcategoryidParameter, subcategorynameParameter);
        }
    
        public virtual int pDeletusermaster(Nullable<long> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pDeletusermaster", useridParameter);
        }
    
        public virtual int pInsertcategories(string categoryname, string categorydescription, string entryby, Nullable<System.DateTime> entrydate, Nullable<byte> isactive)
        {
            var categorynameParameter = categoryname != null ?
                new ObjectParameter("categoryname", categoryname) :
                new ObjectParameter("categoryname", typeof(string));
    
            var categorydescriptionParameter = categorydescription != null ?
                new ObjectParameter("categorydescription", categorydescription) :
                new ObjectParameter("categorydescription", typeof(string));
    
            var entrybyParameter = entryby != null ?
                new ObjectParameter("entryby", entryby) :
                new ObjectParameter("entryby", typeof(string));
    
            var entrydateParameter = entrydate.HasValue ?
                new ObjectParameter("entrydate", entrydate) :
                new ObjectParameter("entrydate", typeof(System.DateTime));
    
            var isactiveParameter = isactive.HasValue ?
                new ObjectParameter("isactive", isactive) :
                new ObjectParameter("isactive", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pInsertcategories", categorynameParameter, categorydescriptionParameter, entrybyParameter, entrydateParameter, isactiveParameter);
        }
    
        public virtual int pInsertcategory(string categoryname, string categorydescription, string entryby, Nullable<System.DateTime> entrydate, Nullable<byte> isactive)
        {
            var categorynameParameter = categoryname != null ?
                new ObjectParameter("categoryname", categoryname) :
                new ObjectParameter("categoryname", typeof(string));
    
            var categorydescriptionParameter = categorydescription != null ?
                new ObjectParameter("categorydescription", categorydescription) :
                new ObjectParameter("categorydescription", typeof(string));
    
            var entrybyParameter = entryby != null ?
                new ObjectParameter("entryby", entryby) :
                new ObjectParameter("entryby", typeof(string));
    
            var entrydateParameter = entrydate.HasValue ?
                new ObjectParameter("entrydate", entrydate) :
                new ObjectParameter("entrydate", typeof(System.DateTime));
    
            var isactiveParameter = isactive.HasValue ?
                new ObjectParameter("isactive", isactive) :
                new ObjectParameter("isactive", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pInsertcategory", categorynameParameter, categorydescriptionParameter, entrybyParameter, entrydateParameter, isactiveParameter);
        }
    
        public virtual int pInsertProduct(string productcode, string productname, Nullable<long> fk_categoryid, Nullable<long> fk_subcategoryid, Nullable<long> fk_userid, string productdescription, string dailyrent, string monthlyrent, string prodcutmake, string productmodel, Nullable<System.DateTime> entrydate, Nullable<double> latitude, Nullable<double> longitude, string availablestate, string availablecity, string availablezipcode, Nullable<long> fk_productstatus, Nullable<byte> isactive, Nullable<byte> isapproved, string videolink, string photolink1, string photolink2, string photolink3, string photolink4)
        {
            var productcodeParameter = productcode != null ?
                new ObjectParameter("productcode", productcode) :
                new ObjectParameter("productcode", typeof(string));
    
            var productnameParameter = productname != null ?
                new ObjectParameter("productname", productname) :
                new ObjectParameter("productname", typeof(string));
    
            var fk_categoryidParameter = fk_categoryid.HasValue ?
                new ObjectParameter("fk_categoryid", fk_categoryid) :
                new ObjectParameter("fk_categoryid", typeof(long));
    
            var fk_subcategoryidParameter = fk_subcategoryid.HasValue ?
                new ObjectParameter("fk_subcategoryid", fk_subcategoryid) :
                new ObjectParameter("fk_subcategoryid", typeof(long));
    
            var fk_useridParameter = fk_userid.HasValue ?
                new ObjectParameter("fk_userid", fk_userid) :
                new ObjectParameter("fk_userid", typeof(long));
    
            var productdescriptionParameter = productdescription != null ?
                new ObjectParameter("productdescription", productdescription) :
                new ObjectParameter("productdescription", typeof(string));
    
            var dailyrentParameter = dailyrent != null ?
                new ObjectParameter("dailyrent", dailyrent) :
                new ObjectParameter("dailyrent", typeof(string));
    
            var monthlyrentParameter = monthlyrent != null ?
                new ObjectParameter("monthlyrent", monthlyrent) :
                new ObjectParameter("monthlyrent", typeof(string));
    
            var prodcutmakeParameter = prodcutmake != null ?
                new ObjectParameter("prodcutmake", prodcutmake) :
                new ObjectParameter("prodcutmake", typeof(string));
    
            var productmodelParameter = productmodel != null ?
                new ObjectParameter("productmodel", productmodel) :
                new ObjectParameter("productmodel", typeof(string));
    
            var entrydateParameter = entrydate.HasValue ?
                new ObjectParameter("entrydate", entrydate) :
                new ObjectParameter("entrydate", typeof(System.DateTime));
    
            var latitudeParameter = latitude.HasValue ?
                new ObjectParameter("latitude", latitude) :
                new ObjectParameter("latitude", typeof(double));
    
            var longitudeParameter = longitude.HasValue ?
                new ObjectParameter("longitude", longitude) :
                new ObjectParameter("longitude", typeof(double));
    
            var availablestateParameter = availablestate != null ?
                new ObjectParameter("availablestate", availablestate) :
                new ObjectParameter("availablestate", typeof(string));
    
            var availablecityParameter = availablecity != null ?
                new ObjectParameter("availablecity", availablecity) :
                new ObjectParameter("availablecity", typeof(string));
    
            var availablezipcodeParameter = availablezipcode != null ?
                new ObjectParameter("availablezipcode", availablezipcode) :
                new ObjectParameter("availablezipcode", typeof(string));
    
            var fk_productstatusParameter = fk_productstatus.HasValue ?
                new ObjectParameter("fk_productstatus", fk_productstatus) :
                new ObjectParameter("fk_productstatus", typeof(long));
    
            var isactiveParameter = isactive.HasValue ?
                new ObjectParameter("isactive", isactive) :
                new ObjectParameter("isactive", typeof(byte));
    
            var isapprovedParameter = isapproved.HasValue ?
                new ObjectParameter("isapproved", isapproved) :
                new ObjectParameter("isapproved", typeof(byte));
    
            var videolinkParameter = videolink != null ?
                new ObjectParameter("videolink", videolink) :
                new ObjectParameter("videolink", typeof(string));
    
            var photolink1Parameter = photolink1 != null ?
                new ObjectParameter("photolink1", photolink1) :
                new ObjectParameter("photolink1", typeof(string));
    
            var photolink2Parameter = photolink2 != null ?
                new ObjectParameter("photolink2", photolink2) :
                new ObjectParameter("photolink2", typeof(string));
    
            var photolink3Parameter = photolink3 != null ?
                new ObjectParameter("photolink3", photolink3) :
                new ObjectParameter("photolink3", typeof(string));
    
            var photolink4Parameter = photolink4 != null ?
                new ObjectParameter("photolink4", photolink4) :
                new ObjectParameter("photolink4", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pInsertProduct", productcodeParameter, productnameParameter, fk_categoryidParameter, fk_subcategoryidParameter, fk_useridParameter, productdescriptionParameter, dailyrentParameter, monthlyrentParameter, prodcutmakeParameter, productmodelParameter, entrydateParameter, latitudeParameter, longitudeParameter, availablestateParameter, availablecityParameter, availablezipcodeParameter, fk_productstatusParameter, isactiveParameter, isapprovedParameter, videolinkParameter, photolink1Parameter, photolink2Parameter, photolink3Parameter, photolink4Parameter);
        }
    
        public virtual int pInsertproductstatus(string status, string entryby, Nullable<System.DateTime> entrydate)
        {
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var entrybyParameter = entryby != null ?
                new ObjectParameter("entryby", entryby) :
                new ObjectParameter("entryby", typeof(string));
    
            var entrydateParameter = entrydate.HasValue ?
                new ObjectParameter("entrydate", entrydate) :
                new ObjectParameter("entrydate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pInsertproductstatus", statusParameter, entrybyParameter, entrydateParameter);
        }
    
        public virtual int pInsertQuestion(string question, Nullable<byte> isActive, string entryby, Nullable<System.DateTime> enteydate)
        {
            var questionParameter = question != null ?
                new ObjectParameter("question", question) :
                new ObjectParameter("question", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("isActive", isActive) :
                new ObjectParameter("isActive", typeof(byte));
    
            var entrybyParameter = entryby != null ?
                new ObjectParameter("entryby", entryby) :
                new ObjectParameter("entryby", typeof(string));
    
            var enteydateParameter = enteydate.HasValue ?
                new ObjectParameter("enteydate", enteydate) :
                new ObjectParameter("enteydate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pInsertQuestion", questionParameter, isActiveParameter, entrybyParameter, enteydateParameter);
        }
    
        public virtual int pInsertrollmaster(string rollname, string rolldescription, Nullable<byte> isActive, string entryby, Nullable<System.DateTime> entrydate)
        {
            var rollnameParameter = rollname != null ?
                new ObjectParameter("rollname", rollname) :
                new ObjectParameter("rollname", typeof(string));
    
            var rolldescriptionParameter = rolldescription != null ?
                new ObjectParameter("rolldescription", rolldescription) :
                new ObjectParameter("rolldescription", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("isActive", isActive) :
                new ObjectParameter("isActive", typeof(byte));
    
            var entrybyParameter = entryby != null ?
                new ObjectParameter("entryby", entryby) :
                new ObjectParameter("entryby", typeof(string));
    
            var entrydateParameter = entrydate.HasValue ?
                new ObjectParameter("entrydate", entrydate) :
                new ObjectParameter("entrydate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pInsertrollmaster", rollnameParameter, rolldescriptionParameter, isActiveParameter, entrybyParameter, entrydateParameter);
        }
    
        public virtual int pInsertSubcategories(string subcategoryname, string subcategorydescription, string entryby, Nullable<System.DateTime> entrydate, Nullable<byte> isActive, Nullable<long> fk_categoryid)
        {
            var subcategorynameParameter = subcategoryname != null ?
                new ObjectParameter("subcategoryname", subcategoryname) :
                new ObjectParameter("subcategoryname", typeof(string));
    
            var subcategorydescriptionParameter = subcategorydescription != null ?
                new ObjectParameter("subcategorydescription", subcategorydescription) :
                new ObjectParameter("subcategorydescription", typeof(string));
    
            var entrybyParameter = entryby != null ?
                new ObjectParameter("entryby", entryby) :
                new ObjectParameter("entryby", typeof(string));
    
            var entrydateParameter = entrydate.HasValue ?
                new ObjectParameter("entrydate", entrydate) :
                new ObjectParameter("entrydate", typeof(System.DateTime));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("isActive", isActive) :
                new ObjectParameter("isActive", typeof(byte));
    
            var fk_categoryidParameter = fk_categoryid.HasValue ?
                new ObjectParameter("fk_categoryid", fk_categoryid) :
                new ObjectParameter("fk_categoryid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pInsertSubcategories", subcategorynameParameter, subcategorydescriptionParameter, entrybyParameter, entrydateParameter, isActiveParameter, fk_categoryidParameter);
        }
    
        public virtual int pInsertusermaster(string email, string password, string firstname, string lastname, string gender, Nullable<System.DateTime> dob, string address, string country, string state, string city, string zipcode, string phone, Nullable<System.DateTime> entrydate, Nullable<byte> isActive, Nullable<long> fk_rollid, Nullable<long> fk_questionid, string answer)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var firstnameParameter = firstname != null ?
                new ObjectParameter("firstname", firstname) :
                new ObjectParameter("firstname", typeof(string));
    
            var lastnameParameter = lastname != null ?
                new ObjectParameter("lastname", lastname) :
                new ObjectParameter("lastname", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(string));
    
            var dobParameter = dob.HasValue ?
                new ObjectParameter("dob", dob) :
                new ObjectParameter("dob", typeof(System.DateTime));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("country", country) :
                new ObjectParameter("country", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var zipcodeParameter = zipcode != null ?
                new ObjectParameter("zipcode", zipcode) :
                new ObjectParameter("zipcode", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var entrydateParameter = entrydate.HasValue ?
                new ObjectParameter("entrydate", entrydate) :
                new ObjectParameter("entrydate", typeof(System.DateTime));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("isActive", isActive) :
                new ObjectParameter("isActive", typeof(byte));
    
            var fk_rollidParameter = fk_rollid.HasValue ?
                new ObjectParameter("fk_rollid", fk_rollid) :
                new ObjectParameter("fk_rollid", typeof(long));
    
            var fk_questionidParameter = fk_questionid.HasValue ?
                new ObjectParameter("fk_questionid", fk_questionid) :
                new ObjectParameter("fk_questionid", typeof(long));
    
            var answerParameter = answer != null ?
                new ObjectParameter("answer", answer) :
                new ObjectParameter("answer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pInsertusermaster", emailParameter, passwordParameter, firstnameParameter, lastnameParameter, genderParameter, dobParameter, addressParameter, countryParameter, stateParameter, cityParameter, zipcodeParameter, phoneParameter, entrydateParameter, isActiveParameter, fk_rollidParameter, fk_questionidParameter, answerParameter);
        }
    
        public virtual ObjectResult<pSelectAllproductstatus_Result> pSelectAllproductstatus()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSelectAllproductstatus_Result>("pSelectAllproductstatus");
        }
    
        public virtual ObjectResult<pSelectAllproductstatus_withparticularID_Result> pSelectAllproductstatus_withparticularID(Nullable<long> poductstatusid)
        {
            var poductstatusidParameter = poductstatusid.HasValue ?
                new ObjectParameter("poductstatusid", poductstatusid) :
                new ObjectParameter("poductstatusid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSelectAllproductstatus_withparticularID_Result>("pSelectAllproductstatus_withparticularID", poductstatusidParameter);
        }
    
        public virtual ObjectResult<pSelectAllQuestion_Result> pSelectAllQuestion(Nullable<long> questionid)
        {
            var questionidParameter = questionid.HasValue ?
                new ObjectParameter("questionid", questionid) :
                new ObjectParameter("questionid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSelectAllQuestion_Result>("pSelectAllQuestion", questionidParameter);
        }
    
        public virtual ObjectResult<pSelectAllRollmaster_Result> pSelectAllRollmaster()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSelectAllRollmaster_Result>("pSelectAllRollmaster");
        }
    
        public virtual ObjectResult<pSelectAllRollmaster_withid_Result> pSelectAllRollmaster_withid(Nullable<long> rollid)
        {
            var rollidParameter = rollid.HasValue ?
                new ObjectParameter("rollid", rollid) :
                new ObjectParameter("rollid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSelectAllRollmaster_withid_Result>("pSelectAllRollmaster_withid", rollidParameter);
        }
    
        public virtual ObjectResult<pselectcat_Result> pselectcat(Nullable<long> categoryid, string categoryname, string categorydescription, string entryby, Nullable<System.DateTime> entrydate, Nullable<byte> isactive)
        {
            var categoryidParameter = categoryid.HasValue ?
                new ObjectParameter("categoryid", categoryid) :
                new ObjectParameter("categoryid", typeof(long));
    
            var categorynameParameter = categoryname != null ?
                new ObjectParameter("categoryname", categoryname) :
                new ObjectParameter("categoryname", typeof(string));
    
            var categorydescriptionParameter = categorydescription != null ?
                new ObjectParameter("categorydescription", categorydescription) :
                new ObjectParameter("categorydescription", typeof(string));
    
            var entrybyParameter = entryby != null ?
                new ObjectParameter("entryby", entryby) :
                new ObjectParameter("entryby", typeof(string));
    
            var entrydateParameter = entrydate.HasValue ?
                new ObjectParameter("entrydate", entrydate) :
                new ObjectParameter("entrydate", typeof(System.DateTime));
    
            var isactiveParameter = isactive.HasValue ?
                new ObjectParameter("isactive", isactive) :
                new ObjectParameter("isactive", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pselectcat_Result>("pselectcat", categoryidParameter, categorynameParameter, categorydescriptionParameter, entrybyParameter, entrydateParameter, isactiveParameter);
        }
    
        public virtual ObjectResult<pSelectProduct_Result> pSelectProduct()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSelectProduct_Result>("pSelectProduct");
        }
    
        public virtual ObjectResult<pSelectsubcat_Result> pSelectsubcat()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSelectsubcat_Result>("pSelectsubcat");
        }
    
        public virtual ObjectResult<pSelectusermaster_Result> pSelectusermaster()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSelectusermaster_Result>("pSelectusermaster");
        }
    
        public virtual int pUpdatecategory(string categoryname, string categorydescription, string entryby, Nullable<System.DateTime> entrydate, Nullable<byte> isactive)
        {
            var categorynameParameter = categoryname != null ?
                new ObjectParameter("categoryname", categoryname) :
                new ObjectParameter("categoryname", typeof(string));
    
            var categorydescriptionParameter = categorydescription != null ?
                new ObjectParameter("categorydescription", categorydescription) :
                new ObjectParameter("categorydescription", typeof(string));
    
            var entrybyParameter = entryby != null ?
                new ObjectParameter("entryby", entryby) :
                new ObjectParameter("entryby", typeof(string));
    
            var entrydateParameter = entrydate.HasValue ?
                new ObjectParameter("entrydate", entrydate) :
                new ObjectParameter("entrydate", typeof(System.DateTime));
    
            var isactiveParameter = isactive.HasValue ?
                new ObjectParameter("isactive", isactive) :
                new ObjectParameter("isactive", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pUpdatecategory", categorynameParameter, categorydescriptionParameter, entrybyParameter, entrydateParameter, isactiveParameter);
        }
    
        public virtual int pUpdateProduct(Nullable<long> productid, string productcode, string productname, Nullable<long> fk_categoryid, Nullable<long> fk_subcategoryid, Nullable<long> fk_userid, string productdescription, string dailyrent, string monthlyrent, string prodcutmake, string productmodel, Nullable<System.DateTime> entrydate, Nullable<double> latitude, Nullable<double> longitude, string availablestate, string availablecity, string availablezipcode, Nullable<long> fk_productstatus, Nullable<byte> isactive, Nullable<byte> isapproved, string videolink, string photolink1, string photolink2, string photolink3, string photolink4)
        {
            var productidParameter = productid.HasValue ?
                new ObjectParameter("productid", productid) :
                new ObjectParameter("productid", typeof(long));
    
            var productcodeParameter = productcode != null ?
                new ObjectParameter("productcode", productcode) :
                new ObjectParameter("productcode", typeof(string));
    
            var productnameParameter = productname != null ?
                new ObjectParameter("productname", productname) :
                new ObjectParameter("productname", typeof(string));
    
            var fk_categoryidParameter = fk_categoryid.HasValue ?
                new ObjectParameter("fk_categoryid", fk_categoryid) :
                new ObjectParameter("fk_categoryid", typeof(long));
    
            var fk_subcategoryidParameter = fk_subcategoryid.HasValue ?
                new ObjectParameter("fk_subcategoryid", fk_subcategoryid) :
                new ObjectParameter("fk_subcategoryid", typeof(long));
    
            var fk_useridParameter = fk_userid.HasValue ?
                new ObjectParameter("fk_userid", fk_userid) :
                new ObjectParameter("fk_userid", typeof(long));
    
            var productdescriptionParameter = productdescription != null ?
                new ObjectParameter("productdescription", productdescription) :
                new ObjectParameter("productdescription", typeof(string));
    
            var dailyrentParameter = dailyrent != null ?
                new ObjectParameter("dailyrent", dailyrent) :
                new ObjectParameter("dailyrent", typeof(string));
    
            var monthlyrentParameter = monthlyrent != null ?
                new ObjectParameter("monthlyrent", monthlyrent) :
                new ObjectParameter("monthlyrent", typeof(string));
    
            var prodcutmakeParameter = prodcutmake != null ?
                new ObjectParameter("prodcutmake", prodcutmake) :
                new ObjectParameter("prodcutmake", typeof(string));
    
            var productmodelParameter = productmodel != null ?
                new ObjectParameter("productmodel", productmodel) :
                new ObjectParameter("productmodel", typeof(string));
    
            var entrydateParameter = entrydate.HasValue ?
                new ObjectParameter("entrydate", entrydate) :
                new ObjectParameter("entrydate", typeof(System.DateTime));
    
            var latitudeParameter = latitude.HasValue ?
                new ObjectParameter("latitude", latitude) :
                new ObjectParameter("latitude", typeof(double));
    
            var longitudeParameter = longitude.HasValue ?
                new ObjectParameter("longitude", longitude) :
                new ObjectParameter("longitude", typeof(double));
    
            var availablestateParameter = availablestate != null ?
                new ObjectParameter("availablestate", availablestate) :
                new ObjectParameter("availablestate", typeof(string));
    
            var availablecityParameter = availablecity != null ?
                new ObjectParameter("availablecity", availablecity) :
                new ObjectParameter("availablecity", typeof(string));
    
            var availablezipcodeParameter = availablezipcode != null ?
                new ObjectParameter("availablezipcode", availablezipcode) :
                new ObjectParameter("availablezipcode", typeof(string));
    
            var fk_productstatusParameter = fk_productstatus.HasValue ?
                new ObjectParameter("fk_productstatus", fk_productstatus) :
                new ObjectParameter("fk_productstatus", typeof(long));
    
            var isactiveParameter = isactive.HasValue ?
                new ObjectParameter("isactive", isactive) :
                new ObjectParameter("isactive", typeof(byte));
    
            var isapprovedParameter = isapproved.HasValue ?
                new ObjectParameter("isapproved", isapproved) :
                new ObjectParameter("isapproved", typeof(byte));
    
            var videolinkParameter = videolink != null ?
                new ObjectParameter("videolink", videolink) :
                new ObjectParameter("videolink", typeof(string));
    
            var photolink1Parameter = photolink1 != null ?
                new ObjectParameter("photolink1", photolink1) :
                new ObjectParameter("photolink1", typeof(string));
    
            var photolink2Parameter = photolink2 != null ?
                new ObjectParameter("photolink2", photolink2) :
                new ObjectParameter("photolink2", typeof(string));
    
            var photolink3Parameter = photolink3 != null ?
                new ObjectParameter("photolink3", photolink3) :
                new ObjectParameter("photolink3", typeof(string));
    
            var photolink4Parameter = photolink4 != null ?
                new ObjectParameter("photolink4", photolink4) :
                new ObjectParameter("photolink4", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pUpdateProduct", productidParameter, productcodeParameter, productnameParameter, fk_categoryidParameter, fk_subcategoryidParameter, fk_useridParameter, productdescriptionParameter, dailyrentParameter, monthlyrentParameter, prodcutmakeParameter, productmodelParameter, entrydateParameter, latitudeParameter, longitudeParameter, availablestateParameter, availablecityParameter, availablezipcodeParameter, fk_productstatusParameter, isactiveParameter, isapprovedParameter, videolinkParameter, photolink1Parameter, photolink2Parameter, photolink3Parameter, photolink4Parameter);
        }
    
        public virtual int pUpdateproductstatus(Nullable<long> poduststatusid, string status, string entryby, Nullable<System.DateTime> entrydate)
        {
            var poduststatusidParameter = poduststatusid.HasValue ?
                new ObjectParameter("poduststatusid", poduststatusid) :
                new ObjectParameter("poduststatusid", typeof(long));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var entrybyParameter = entryby != null ?
                new ObjectParameter("entryby", entryby) :
                new ObjectParameter("entryby", typeof(string));
    
            var entrydateParameter = entrydate.HasValue ?
                new ObjectParameter("entrydate", entrydate) :
                new ObjectParameter("entrydate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pUpdateproductstatus", poduststatusidParameter, statusParameter, entrybyParameter, entrydateParameter);
        }
    
        public virtual int pUpdateQuestion(Nullable<long> questionid, string question, Nullable<byte> isActive, string entryby, Nullable<System.DateTime> enteydate)
        {
            var questionidParameter = questionid.HasValue ?
                new ObjectParameter("questionid", questionid) :
                new ObjectParameter("questionid", typeof(long));
    
            var questionParameter = question != null ?
                new ObjectParameter("question", question) :
                new ObjectParameter("question", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("isActive", isActive) :
                new ObjectParameter("isActive", typeof(byte));
    
            var entrybyParameter = entryby != null ?
                new ObjectParameter("entryby", entryby) :
                new ObjectParameter("entryby", typeof(string));
    
            var enteydateParameter = enteydate.HasValue ?
                new ObjectParameter("enteydate", enteydate) :
                new ObjectParameter("enteydate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pUpdateQuestion", questionidParameter, questionParameter, isActiveParameter, entrybyParameter, enteydateParameter);
        }
    
        public virtual int pUpdateRollmaster(Nullable<long> rollid, string rollname, string rolldescription, Nullable<byte> isActive, string entryby, Nullable<System.DateTime> entrydate)
        {
            var rollidParameter = rollid.HasValue ?
                new ObjectParameter("rollid", rollid) :
                new ObjectParameter("rollid", typeof(long));
    
            var rollnameParameter = rollname != null ?
                new ObjectParameter("rollname", rollname) :
                new ObjectParameter("rollname", typeof(string));
    
            var rolldescriptionParameter = rolldescription != null ?
                new ObjectParameter("rolldescription", rolldescription) :
                new ObjectParameter("rolldescription", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("isActive", isActive) :
                new ObjectParameter("isActive", typeof(byte));
    
            var entrybyParameter = entryby != null ?
                new ObjectParameter("entryby", entryby) :
                new ObjectParameter("entryby", typeof(string));
    
            var entrydateParameter = entrydate.HasValue ?
                new ObjectParameter("entrydate", entrydate) :
                new ObjectParameter("entrydate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pUpdateRollmaster", rollidParameter, rollnameParameter, rolldescriptionParameter, isActiveParameter, entrybyParameter, entrydateParameter);
        }
    
        public virtual int pUpdateSubcategory(Nullable<long> subcategoryid, string subcategoryname, string subcategorydescription, string entryby, Nullable<System.DateTime> entrydate, Nullable<byte> isActive, Nullable<long> fk_categoryid)
        {
            var subcategoryidParameter = subcategoryid.HasValue ?
                new ObjectParameter("subcategoryid", subcategoryid) :
                new ObjectParameter("subcategoryid", typeof(long));
    
            var subcategorynameParameter = subcategoryname != null ?
                new ObjectParameter("subcategoryname", subcategoryname) :
                new ObjectParameter("subcategoryname", typeof(string));
    
            var subcategorydescriptionParameter = subcategorydescription != null ?
                new ObjectParameter("subcategorydescription", subcategorydescription) :
                new ObjectParameter("subcategorydescription", typeof(string));
    
            var entrybyParameter = entryby != null ?
                new ObjectParameter("entryby", entryby) :
                new ObjectParameter("entryby", typeof(string));
    
            var entrydateParameter = entrydate.HasValue ?
                new ObjectParameter("entrydate", entrydate) :
                new ObjectParameter("entrydate", typeof(System.DateTime));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("isActive", isActive) :
                new ObjectParameter("isActive", typeof(byte));
    
            var fk_categoryidParameter = fk_categoryid.HasValue ?
                new ObjectParameter("fk_categoryid", fk_categoryid) :
                new ObjectParameter("fk_categoryid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pUpdateSubcategory", subcategoryidParameter, subcategorynameParameter, subcategorydescriptionParameter, entrybyParameter, entrydateParameter, isActiveParameter, fk_categoryidParameter);
        }
    
        public virtual int pUpdateusermaster(Nullable<long> userid, string email, string password, string firstname, string lastname, string gender, Nullable<System.DateTime> dob, string address, string country, string state, string city, string zipcode, string phone, Nullable<System.DateTime> entrydate, Nullable<byte> isActive, Nullable<long> fk_rollid, Nullable<long> fk_questionid, string answer)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var firstnameParameter = firstname != null ?
                new ObjectParameter("firstname", firstname) :
                new ObjectParameter("firstname", typeof(string));
    
            var lastnameParameter = lastname != null ?
                new ObjectParameter("lastname", lastname) :
                new ObjectParameter("lastname", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(string));
    
            var dobParameter = dob.HasValue ?
                new ObjectParameter("dob", dob) :
                new ObjectParameter("dob", typeof(System.DateTime));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("country", country) :
                new ObjectParameter("country", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var zipcodeParameter = zipcode != null ?
                new ObjectParameter("zipcode", zipcode) :
                new ObjectParameter("zipcode", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var entrydateParameter = entrydate.HasValue ?
                new ObjectParameter("entrydate", entrydate) :
                new ObjectParameter("entrydate", typeof(System.DateTime));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("isActive", isActive) :
                new ObjectParameter("isActive", typeof(byte));
    
            var fk_rollidParameter = fk_rollid.HasValue ?
                new ObjectParameter("fk_rollid", fk_rollid) :
                new ObjectParameter("fk_rollid", typeof(long));
    
            var fk_questionidParameter = fk_questionid.HasValue ?
                new ObjectParameter("fk_questionid", fk_questionid) :
                new ObjectParameter("fk_questionid", typeof(long));
    
            var answerParameter = answer != null ?
                new ObjectParameter("answer", answer) :
                new ObjectParameter("answer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pUpdateusermaster", useridParameter, emailParameter, passwordParameter, firstnameParameter, lastnameParameter, genderParameter, dobParameter, addressParameter, countryParameter, stateParameter, cityParameter, zipcodeParameter, phoneParameter, entrydateParameter, isActiveParameter, fk_rollidParameter, fk_questionidParameter, answerParameter);
        }
    }
}
